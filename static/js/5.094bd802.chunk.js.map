{"version":3,"sources":["components/Form/FormUI/Textfield.js","components/Form/FormUI/DateInput.js","components/Form/FormUI/SelectInput.js","components/Form/FormUI/CheckboxInput.js","components/Form/FormUI/ButtonInput.js","components/Form/Form.js","components/Form/data/Regex.js","pages/Checkout/Checkout.js"],"names":["TextInput","name","rest","useField","field","meta","configTextfield","fullWidth","variant","touched","error","helperText","TextField","DateInput","configDateInput","type","InputLabelProps","shrink","SelectInput","options","setFieldValue","useFormikContext","configSelect","select","onChange","e","value","target","Object","keys","map","item","pos","MenuItem","CheckboxInput","label","legend","configCheckbox","checked","configFormControl","FormControl","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","ButtonInput","children","submitForm","configButton","color","onClick","Button","useStyles","makeStyles","theme","formWrapper","marginTop","spacing","marginBottom","INITIAL_FORM_STATE","firstName","lastName","birthday","email","phone","adress","city","country","message","termsOfService","FORM_VALIDATION","Yup","shape","required","matches","oneOf","FormCheckout","classes","order","useSelector","itemsSelectors","cardItems","dispatch","useDispatch","history","useHistory","Grid","container","xs","Container","maxWidth","className","initialValues","validationSchema","onSubmit","values","console","log","setTimeout","push","itemsOperations","clearCard","Typography","countries","multiline","rows","Checkout","Form"],"mappings":"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","file":"static/js/5.094bd802.chunk.js","sourcesContent":["import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { useField } from \"formik\";\n\nconst TextInput = ({ name, ...rest }) => {\n  const [field, meta] = useField(name);\n\n  const configTextfield = {\n    ...field,\n    ...rest,\n    fullWidth: true,\n    variant: \"outlined\",\n  };\n  if (meta && meta.touched && meta.error) {\n    configTextfield.error = true;\n    configTextfield.helperText = meta.error;\n  }\n  return <TextField {...configTextfield} />;\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { useField } from \"formik\";\nconst DateInput = ({ name, ...rest }) => {\n  const [field, meta] = useField(name);\n\n  const configDateInput = {\n    ...field,\n    ...rest,\n    type: \"date\",\n    variant: \"outlined\",\n    fullWidth: true,\n    InputLabelProps: {\n      shrink: true,\n    },\n  };\n  if (meta && meta.touched && meta.error) {\n    configDateInput.error = true;\n    configDateInput.helperText = meta.error;\n  }\n\n  return <TextField {...configDateInput} />;\n};\n\nexport default DateInput;\n","import React from \"react\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport { useField, useFormikContext } from \"formik\";\n\nconst SelectInput = ({ name, options, ...rest }) => {\n  const { setFieldValue } = useFormikContext();\n  const [field, meta] = useField(name);\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setFieldValue(name, value);\n  };\n\n  const configSelect = {\n    ...field,\n    ...rest,\n    select: true,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleChange,\n  };\n\n  if (meta && meta.error && meta.touched) {\n    configSelect.error = true;\n    configSelect.helperText = meta.error;\n  }\n\n  return (\n    <TextField {...configSelect}>\n      {Object.keys(options).map((item, pos) => {\n        return (\n          <MenuItem value={item} key={pos}>\n            {options[item]}\n          </MenuItem>\n        );\n      })}\n    </TextField>\n  );\n};\n\nexport default SelectInput;\n","import React from \"react\";\nimport {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormLabel,\n} from \"@material-ui/core\";\nimport { useField, useFormikContext } from \"formik\";\n\nconst CheckboxInput = ({ name, label, legend, ...rest }) => {\n  const { setFieldValue } = useFormikContext();\n  const [field, meta] = useField(name);\n\n  const handleChange = (e) => {\n    const { checked } = e.target;\n    setFieldValue(name, checked);\n  };\n\n  const configCheckbox = {\n    ...field,\n    onChange: handleChange,\n  };\n\n  const configFormControl = {};\n  if (meta && meta.touched && meta.error) {\n    configFormControl.error = true;\n  }\n\n  return (\n    <FormControl {...configFormControl}>\n      <FormLabel component=\"legend\">{legend}</FormLabel>\n      <FormGroup>\n        <FormControlLabel\n          control={<Checkbox {...configCheckbox} />}\n          label={label}\n        />\n      </FormGroup>\n    </FormControl>\n  );\n};\n\nexport default CheckboxInput;\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { useFormikContext } from \"formik\";\n\nconst ButtonInput = ({ children, ...rest }) => {\n  const { submitForm } = useFormikContext();\n\n  const handleSubmit = () => {\n    submitForm();\n  };\n\n  const configButton = {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleSubmit,\n  };\n\n  return <Button {...configButton}>{children}</Button>;\n};\n\nexport default ButtonInput;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Grid, Typography } from \"@material-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport TextInput from \"./FormUI/Textfield\";\nimport DateInput from \"./FormUI/DateInput\";\nimport { phoneRegExp } from \"./data/Regex\";\nimport countries from \"./data/countries.json\";\nimport SelectInput from \"./FormUI/SelectInput\";\nimport CheckboxInput from \"./FormUI/CheckboxInput\";\nimport ButtonInput from \"./FormUI/ButtonInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { itemsSelectors, itemsOperations } from \"../../store/items\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  formWrapper: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(8),\n  },\n}));\n\nconst INITIAL_FORM_STATE = {\n  firstName: \"\",\n  lastName: \"\",\n  birthday: \"\",\n  email: \"\",\n  phone: \"\",\n  adress: \"\",\n  city: \"\",\n  country: \"\",\n  message: \"\",\n  termsOfService: false,\n};\n\nconst FORM_VALIDATION = Yup.object().shape({\n  firstName: Yup.string().required(\"Required\"),\n  lastName: Yup.string().required(\"Required\"),\n  birthday: Yup.date().required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  phone: Yup.string()\n    .matches(phoneRegExp, \"Please enter a valid phone number\")\n    .required(\"Required\"),\n  adress: Yup.string().required(\"Required\"),\n  city: Yup.string().required(\"Required\"),\n  country: Yup.string().required(\"Required\"),\n  message: Yup.string(),\n  termsOfService: Yup.boolean()\n    .oneOf([true], \"The terms and conditions must be accepted.\")\n    .required(\"The terms and conditions must be accepted.\"),\n});\n\nconst FormCheckout = () => {\n  const classes = useStyles();\n  const order = useSelector(itemsSelectors.cardItems());\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Container maxWidth=\"md\">\n          <div className={classes.formWrapper}>\n            <Formik\n              initialValues={{ ...INITIAL_FORM_STATE }}\n              validationSchema={FORM_VALIDATION}\n              onSubmit={(values) => {\n                console.log(\"User Informaion\");\n                console.log(values);\n                console.log(\"Order Informaion\");\n                console.log(order);\n                setTimeout(() => {\n                  history.push(\"./home\");\n                  dispatch(itemsOperations.clearCard());\n                }, 3000);\n              }}\n            >\n              <Form>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Typography>Personal Information</Typography>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextInput name=\"firstName\" label=\"First Name\" />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextInput name=\"lastName\" label=\"Last Name\" />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <DateInput name=\"birthday\" label=\"Birthday date\" />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextInput name=\"phone\" label=\"Phone number\" />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextInput name=\"email\" label=\"Email\" />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography>Delivery Adress</Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextInput name=\"adress\" label=\"Adress\" />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextInput name=\"city\" label=\"City\" />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <SelectInput\n                      name=\"country\"\n                      label=\"Country\"\n                      options={countries}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextInput\n                      name=\"message\"\n                      label=\"Optional comments to order\"\n                      multiline={true}\n                      rows={4}\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <CheckboxInput\n                      name=\"termsOfService\"\n                      legend=\"Terms of Service\"\n                      label=\"Agree\"\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <ButtonInput>Checkout</ButtonInput>\n                  </Grid>\n                </Grid>\n              </Form>\n            </Formik>\n          </div>\n        </Container>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default FormCheckout;\n","export const phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n","import React from \"react\";\nimport FormCheckout from \"../../components/Form/Form\";\n\nconst Checkout = () => {\n  return <FormCheckout />;\n};\n\nexport default Checkout;\n"],"sourceRoot":""}